(()=>{"use strict";var e,t;(t=e||(e={}))[t.SUCESS=0]="SUCESS",t[t.ERROR=1]="ERROR";var n="undefined"!=typeof Float32Array?Float32Array:Array;function r(){var e=new n(16);return n!=Float32Array&&(e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0),e[0]=1,e[5]=1,e[10]=1,e[15]=1,e}Math.random,Math.PI,Math.hypot||(Math.hypot=function(){for(var e=0,t=arguments.length;t--;)e+=arguments[t]*arguments[t];return Math.sqrt(e)});var o;function a(e,t,r){var o=new n(3);return o[0]=e,o[1]=t,o[2]=r,o}o=new n(3),n!=Float32Array&&(o[0]=0,o[1]=0,o[2]=0);const i=new Float32Array([0,1,0,1,1,0,1,1,1,1,-1,-1,1,1,0,0,1,1,0,1,1,-1,1,1,0,0,0,1,0,0,0,1,0,1,1,1,1,1,1,1,1,-1,1,1,1,0,1,1,0,1,1,-1,-1,1,1,0,0,1,0,0,0,1,0,1,1,1,1,1,1,1,1,-1,-1,1,1,0,1,1,0,1,-1,-1,-1,1,1,0,0,1,0,0,0,1,0,1,0,0,1,1,1,1,-1,-1,-1,1,0,1,1,1,0,1,-1,-1,1,1,0,1,0,1,0,0,-1,-1,-1,1,1,1,1,1,1,1,1,-1,-1,1,0,1,1,1,0,1,1,-1,1,1,0,0,1,1,0,0,-1,-1,-1,1,0,0,1,1,0,0,1,-1,1,1,0,0,1,1,0,0,-1,-1,1,1,1,1,1,1,1,1]);var u=function(e,t,n,r){return new(n||(n=Promise))((function(o,a){function i(e){try{s(r.next(e))}catch(e){a(e)}}function u(e){try{s(r.throw(e))}catch(e){a(e)}}function s(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,u)}s((r=r.apply(e,t||[])).next())}))};const s={meshName:"Pyramid",vertexArray:i,vertexCount:18,vertexSize:40,colorOffset:16,uvOffset:32,positionOffset:0},c=(new class{constructor(){this._meshes=new Map,this._vertexCount=0}get vertexSize(){return 40}get vertexCount(){return this._vertexCount}add(e){if(this._meshes.has(e.meshName))throw new Error("Mesh already in map.");this._meshes.set(e.meshName,e)}remove(e){this._meshes.has(e.meshName)&&this._meshes.delete(e.meshName)}},({canvas:e,pageState:t})=>u(void 0,void 0,void 0,(function*(){const n=yield function(e,t,n=!1,r=!1){return u(this,void 0,void 0,(function*(){const o=yield e.requestAdapter({powerPreference:t,forceFallbackAdapter:n});return(null==o?void 0:o.isFallbackAdapter)&&!0===r?null:o}))}(navigator.gpu,"high-performance",!1,!0),o=yield null==n?void 0:n.requestAdapterInfo();if(console.log(null==o?void 0:o.vendor),console.log(null==n?void 0:n.isFallbackAdapter),null==n)throw new Error("Could not find adapter");const i=yield n.requestDevice();if(!t.active)return;const c=e.getContext("webgpu"),f=window.devicePixelRatio||1,l=[e.clientWidth*f,e.clientHeight*f],d=navigator.gpu.getPreferredCanvasFormat();c.configure({device:i,usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC,format:d,alphaMode:"opaque"});const v=i.createBuffer({size:s.vertexSize*s.vertexCount,usage:GPUBufferUsage.VERTEX,mappedAtCreation:!0});new Float32Array(v.getMappedRange()).set(s.vertexArray),v.unmap();const h=i.createRenderPipeline({layout:"auto",vertex:{module:i.createShaderModule({code:"struct Uniforms {\n  modelViewProjectionMatrix : mat4x4<f32>,\n}\n@binding(0) @group(0) var<uniform> uniforms : Uniforms;\n\nstruct VertexOutput {\n  @builtin(position) Position : vec4<f32>,\n  @location(0) fragUV : vec2<f32>,\n  @location(1) fragPosition: vec4<f32>,\n}\n\n@vertex\nfn main(\n  @location(0) position : vec4<f32>,\n  @location(1) uv : vec2<f32>\n) -> VertexOutput {\n  var output : VertexOutput;\n  output.Position = uniforms.modelViewProjectionMatrix * position;\n  output.fragUV = uv;\n  output.fragPosition = 0.5 * (position + vec4(1.0, 1.0, 1.0, 1.0));\n  return output;\n}\n"}),entryPoint:"main",buffers:[{arrayStride:s.vertexSize,attributes:[{shaderLocation:0,offset:s.positionOffset,format:"float32x4"},{shaderLocation:1,offset:s.uvOffset,format:"float32x2"}]}]},fragment:{module:i.createShaderModule({code:"@fragment\nfn main(\n  @location(0) fragUV: vec2<f32>,\n  @location(1) fragPosition: vec4<f32>\n) -> @location(0) vec4<f32> {\n  return fragPosition;\n}\n"}),entryPoint:"main",targets:[{format:d}]},primitive:{topology:"triangle-list",cullMode:"back"},depthStencil:{depthWriteEnabled:!0,depthCompare:"less",format:"depth24plus"}}),p=i.createTexture({size:l,format:"depth24plus",usage:GPUTextureUsage.RENDER_ATTACHMENT}),m=i.createBuffer({size:64,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),g=i.createBindGroup({layout:h.getBindGroupLayout(0),entries:[{binding:0,resource:{buffer:m}}]}),x={colorAttachments:[{view:void 0,resolveTarget:void 0,clearValue:{r:.5,g:.5,b:.5,a:1},loadOp:"clear",storeOp:"store"}],depthStencilAttachment:{view:p.createView(),depthClearValue:1,depthLoadOp:"clear",depthStoreOp:"store"}},y=e.width/e.height,w=r();(function(e,t,n,r,o){var a,i=1/Math.tan(t/2);e[0]=i/n,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=i,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[11]=-1,e[12]=0,e[13]=0,e[15]=0,null!=o&&o!==1/0?(a=1/(r-o),e[10]=(o+r)*a,e[14]=2*o*r*a):(e[10]=-1,e[14]=-2*r)})(w,2*Math.PI/5,y,1,100),requestAnimationFrame((function e(){if(!t.active)return;const n=function(){const e=r();!function(e,t,n){var r,o,a,i,u,s,c,f,l,d,v,h,p=n[0],m=n[1],g=n[2];t===e?(e[12]=t[0]*p+t[4]*m+t[8]*g+t[12],e[13]=t[1]*p+t[5]*m+t[9]*g+t[13],e[14]=t[2]*p+t[6]*m+t[10]*g+t[14],e[15]=t[3]*p+t[7]*m+t[11]*g+t[15]):(r=t[0],o=t[1],a=t[2],i=t[3],u=t[4],s=t[5],c=t[6],f=t[7],l=t[8],d=t[9],v=t[10],h=t[11],e[0]=r,e[1]=o,e[2]=a,e[3]=i,e[4]=u,e[5]=s,e[6]=c,e[7]=f,e[8]=l,e[9]=d,e[10]=v,e[11]=h,e[12]=r*p+u*m+l*g+t[12],e[13]=o*p+s*m+d*g+t[13],e[14]=a*p+c*m+v*g+t[14],e[15]=i*p+f*m+h*g+t[15])}(e,e,a(0,0,-4));const t=Date.now()/1e3;!function(e,t,n,r){var o,a,i,u,s,c,f,l,d,v,h,p,m,g,x,y,w,P,b,A,C,M,U,S,E=r[0],O=r[1],R=r[2],B=Math.hypot(E,O,R);B<1e-6||(E*=B=1/B,O*=B,R*=B,o=Math.sin(1),i=1-(a=Math.cos(1)),u=t[0],s=t[1],c=t[2],f=t[3],l=t[4],d=t[5],v=t[6],h=t[7],p=t[8],m=t[9],g=t[10],x=t[11],y=E*E*i+a,w=O*E*i+R*o,P=R*E*i-O*o,b=E*O*i-R*o,A=O*O*i+a,C=R*O*i+E*o,M=E*R*i+O*o,U=O*R*i-E*o,S=R*R*i+a,e[0]=u*y+l*w+p*P,e[1]=s*y+d*w+m*P,e[2]=c*y+v*w+g*P,e[3]=f*y+h*w+x*P,e[4]=u*b+l*A+p*C,e[5]=s*b+d*A+m*C,e[6]=c*b+v*A+g*C,e[7]=f*b+h*A+x*C,e[8]=u*M+l*U+p*S,e[9]=s*M+d*U+m*S,e[10]=c*M+v*U+g*S,e[11]=f*M+h*U+x*S,t!==e&&(e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]))}(e,e,0,a(Math.sin(t),Math.cos(t),0));const n=r();return function(e,t,n){var r=t[0],o=t[1],a=t[2],i=t[3],u=t[4],s=t[5],c=t[6],f=t[7],l=t[8],d=t[9],v=t[10],h=t[11],p=t[12],m=t[13],g=t[14],x=t[15],y=n[0],w=n[1],P=n[2],b=n[3];e[0]=y*r+w*u+P*l+b*p,e[1]=y*o+w*s+P*d+b*m,e[2]=y*a+w*c+P*v+b*g,e[3]=y*i+w*f+P*h+b*x,y=n[4],w=n[5],P=n[6],b=n[7],e[4]=y*r+w*u+P*l+b*p,e[5]=y*o+w*s+P*d+b*m,e[6]=y*a+w*c+P*v+b*g,e[7]=y*i+w*f+P*h+b*x,y=n[8],w=n[9],P=n[10],b=n[11],e[8]=y*r+w*u+P*l+b*p,e[9]=y*o+w*s+P*d+b*m,e[10]=y*a+w*c+P*v+b*g,e[11]=y*i+w*f+P*h+b*x,y=n[12],w=n[13],P=n[14],b=n[15],e[12]=y*r+w*u+P*l+b*p,e[13]=y*o+w*s+P*d+b*m,e[14]=y*a+w*c+P*v+b*g,e[15]=y*i+w*f+P*h+b*x}(n,w,e),n}();i.queue.writeBuffer(m,0,n.buffer,n.byteOffset,n.byteLength),x.colorAttachments[0].view=c.getCurrentTexture().createView();const o=i.createCommandEncoder(),u=o.beginRenderPass(x);u.setPipeline(h),u.setBindGroup(0,g),u.setVertexBuffer(0,v),u.draw(s.vertexCount,1,0,0),u.end(),i.queue.submit([o.finish()]),requestAnimationFrame(e)}))})));(()=>{const e=navigator.gpu,t=document.getElementById("gpu-check");return e?(t.textContent="WebGPU Enabled!",!0):(t.textContent="Current browser does not support WebGPU!",!1)})()&&(console.log("Starting Bigworld..."),c({canvas:(()=>{const e=document.createElement("canvas"),t=document.getElementById("checker-div");return document.body.insertBefore(e,t),e.id="web-gpu-context",e.width=640,e.height=480,null==t||t.remove(),e})(),pageState:{active:!0}}))})();
//# sourceMappingURL=main.bundle.js.map