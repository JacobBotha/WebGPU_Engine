(()=>{"use strict";var t=1e-6,e="undefined"!=typeof Float32Array?Float32Array:Array;function n(){var t=new e(16);return e!=Float32Array&&(t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0),t[0]=1,t[5]=1,t[10]=1,t[15]=1,t}function o(t,e,n){var o,i,r,s,a,h,c,u,f,l,d,g,m=n[0],p=n[1],v=n[2];return e===t?(t[12]=e[0]*m+e[4]*p+e[8]*v+e[12],t[13]=e[1]*m+e[5]*p+e[9]*v+e[13],t[14]=e[2]*m+e[6]*p+e[10]*v+e[14],t[15]=e[3]*m+e[7]*p+e[11]*v+e[15]):(o=e[0],i=e[1],r=e[2],s=e[3],a=e[4],h=e[5],c=e[6],u=e[7],f=e[8],l=e[9],d=e[10],g=e[11],t[0]=o,t[1]=i,t[2]=r,t[3]=s,t[4]=a,t[5]=h,t[6]=c,t[7]=u,t[8]=f,t[9]=l,t[10]=d,t[11]=g,t[12]=o*m+a*p+f*v+e[12],t[13]=i*m+h*p+l*v+e[13],t[14]=r*m+c*p+d*v+e[14],t[15]=s*m+u*p+g*v+e[15]),t}Math.random,Math.PI,Math.hypot||(Math.hypot=function(){for(var t=0,e=arguments.length;e--;)t+=arguments[e]*arguments[e];return Math.sqrt(t)});var i=function(t,e,n,o,i){var r,s=1/Math.tan(e/2);return t[0]=s/n,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=s,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=-1,t[12]=0,t[13]=0,t[15]=0,null!=i&&i!==1/0?(r=1/(o-i),t[10]=(i+o)*r,t[14]=2*i*o*r):(t[10]=-1,t[14]=-2*o),t};function r(){var t=new e(3);return e!=Float32Array&&(t[0]=0,t[1]=0,t[2]=0),t}function s(t,n,o){var i=new e(3);return i[0]=t,i[1]=n,i[2]=o,i}function a(t,e,n){return t[0]=e[0]+n[0],t[1]=e[1]+n[1],t[2]=e[2]+n[2],t}function h(t,e,n){return t[0]=e[0]-n[0],t[1]=e[1]-n[1],t[2]=e[2]-n[2],t}function c(t,e,n){return t[0]=e[0]*n,t[1]=e[1]*n,t[2]=e[2]*n,t}r();const u=(t,e=document.body)=>{const n=document.createElement("h5");return n.textContent=t,e.appendChild(n),n};var f;!function(t){t[t.SUCESS=0]="SUCESS",t[t.ERROR=1]="ERROR"}(f||(f={}));var l=function(t,e,n,o){return new(n||(n=Promise))((function(i,r){function s(t){try{h(o.next(t))}catch(t){r(t)}}function a(t){try{h(o.throw(t))}catch(t){r(t)}}function h(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,a)}h((o=o.apply(t,e||[])).next())}))};const d=new class{constructor(t=40,e=0,n=16,o=32){this._meshes=new Map,this._vertexCount=0,this._vertexSize=t,this._positionOffset=e,this._colorOffset=n,this._uvOffset=o}get vertexSize(){return this._vertexSize}get positionOffset(){return this._positionOffset}get colorOffset(){return this._colorOffset}get uvOffset(){return this._uvOffset}get vertexCount(){return this._vertexCount}get(t){const e=this._meshes.get(t);if(!e)throw new Error("Cannot find mesh!");return e}add(t){if(this._meshes.has(t.meshName))throw new Error("Mesh already in map.");if(this.vertexSize!=t.vertexSize)throw new Error("Cannot add mesh with different vertex size to the ");if(this.positionOffset!=t.positionOffset||this.colorOffset!=t.colorOffset||this.uvOffset!=t.uvOffset)throw new Error("Cannot add mesh with different offsets.");let e=this.vertexCount;this._meshes.set(t.meshName,{mesh:t,offset:e}),this._vertexCount+=t.vertexCount}remove(t){this._meshes.has(t.meshName)&&(this._vertexCount-=t.vertexCount,this._meshes.delete(t.meshName))}forEach(t,e){this._meshes.forEach(t,e)}},g=1000001,m=[],p=[],v=[],w=[],x=t=>m.length==g?(console.log("Cannot add model exceeded max!"),f.ERROR):(m.push(t),f.SUCESS),y=t=>{try{return d.add(t),f.SUCESS}catch(t){return console.log(t),f.ERROR}},M=(t,e,n,o)=>t.createBindGroup({layout:e.getBindGroupLayout(0),entries:[{binding:0,resource:{buffer:n,offset:256*o,size:64}}]});let S=0,C=0;const b=()=>S/1e3,E=Date.now(),O=()=>(C/((Date.now()-E)/1e3)).toFixed(2),A=({gameWindow:t,pageState:e})=>l(void 0,void 0,void 0,(function*(){const n=yield function(t,e,n=!1,o=!1){return l(this,void 0,void 0,(function*(){const i=yield t.requestAdapter({powerPreference:e,forceFallbackAdapter:n});return(null==i?void 0:i.isFallbackAdapter)&&!0===o?null:i}))}(navigator.gpu,"high-performance",!1,!0),o=yield null==n?void 0:n.requestAdapterInfo();if(console.log(null==o?void 0:o.vendor),console.log(null==n?void 0:n.isFallbackAdapter),null==n)throw new Error("Could not find adapter");const i=yield n.requestDevice();if(!e.active)return;const r=t.context,s=[t.width,t.height],a=navigator.gpu.getPreferredCanvasFormat();r.configure({device:i,usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC,format:a,alphaMode:"opaque"});const h=i.createBuffer({size:d.vertexSize*d.vertexCount,usage:GPUBufferUsage.VERTEX,mappedAtCreation:!0});let c=new Float32Array(h.getMappedRange());d.forEach((({mesh:t,offset:e})=>{c.set(t.vertexArray,d.vertexSize/4*e)})),h.unmap();const u=i.createRenderPipeline({layout:"auto",vertex:{module:i.createShaderModule({code:"struct Uniforms {\n  modelMatrix : mat4x4<f32>,\n}\n\nstruct CameraUniform {\n    viewMatrix : mat4x4<f32>,\n    projMatrix : mat4x4<f32>,\n}\n@binding(0) @group(0) var<uniform> uniforms : Uniforms;\n@binding(0) @group(1) var<uniform> camera : CameraUniform;\n\nstruct VertexOutput {\n  @builtin(position) Position : vec4<f32>,\n  @location(0) fragUV : vec2<f32>,\n  @location(1) fragPosition: vec4<f32>,\n}\n\n@vertex\nfn main(\n  @location(0) position : vec4<f32>,\n  @location(1) uv : vec2<f32>\n) -> VertexOutput {\n  var output : VertexOutput;\n  var mvp = camera.projMatrix * camera.viewMatrix * uniforms.modelMatrix;\n  output.Position = mvp * position;\n  output.fragUV = uv;\n  output.fragPosition = 0.5 * (position + vec4(1.0, 1.0, 1.0, 1.0));\n  return output;\n}\n"}),entryPoint:"main",buffers:[{arrayStride:d.vertexSize,attributes:[{shaderLocation:0,offset:d.positionOffset,format:"float32x4"},{shaderLocation:1,offset:d.uvOffset,format:"float32x2"}]}]},fragment:{module:i.createShaderModule({code:"@fragment\nfn main(\n  @location(0) fragUV: vec2<f32>,\n  @location(1) fragPosition: vec4<f32>\n) -> @location(0) vec4<f32> {\n  return fragPosition;\n}\n"}),entryPoint:"main",targets:[{format:a}]},primitive:{topology:"triangle-list",cullMode:"back"},depthStencil:{depthWriteEnabled:!0,depthCompare:"less",format:"depth24plus"}});let f=i.createTexture({size:s,format:"depth24plus",usage:GPUTextureUsage.RENDER_ATTACHMENT});const x=i.createBuffer({size:256000256,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST});for(let t=0;t<g;t++)p.push(M(i,u,x,t));const y=i.createBuffer({size:256,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST});for(let t=0;t<1;t++)w.push(i.createBindGroup({layout:u.getBindGroupLayout(1),entries:[{binding:0,resource:{buffer:y,offset:0,size:128}}],label:"camera_bind_group"}));const b={colorAttachments:[{view:void 0,resolveTarget:void 0,clearValue:{r:.5,g:.5,b:.5,a:1},loadOp:"clear",storeOp:"store"}],depthStencilAttachment:{view:f.createView(),depthClearValue:1,depthLoadOp:"clear",depthStoreOp:"store"}};let E=Date.now();for(let t of m)t.onInit(),console.log("Initialising models!");requestAnimationFrame((function n(){let o=Date.now();if(S=o-E,E=o,C+=1,t.hasResized(s[0],s[1])){void 0!==f&&f.destroy(),s[0]=t.width,s[1]=t.height,f=i.createTexture({size:s,format:"depth24plus",usage:GPUTextureUsage.RENDER_ATTACHMENT});let e=f.createView();b.depthStencilAttachment.view=e;for(let t of v)t.aspect=s[0]/s[1]}if(!e.active)return;for(let t of m)t.onUpdate();for(let t of v)t.onUpdate();for(let t=0;t<m.length;t++){const e=m[t].transform,n=256*t;i.queue.writeBuffer(x,n,e.buffer,e.byteOffset,e.byteLength)}for(let t=0;t<v.length;t++){const e=v[t].viewMatrix(),n=v[t].projMatrix(),o=new Float32Array(e.length+n.length);o.set(e),o.set(n,e.length);const r=256*t;i.queue.writeBuffer(y,r,o.buffer,o.byteOffset,o.byteLength)}b.colorAttachments[0].view=r.getCurrentTexture().createView();const a=i.createCommandEncoder(),c=a.beginRenderPass(b);c.setPipeline(u),c.setVertexBuffer(0,h),c.setBindGroup(1,w[0]);for(let t=0;t<m.length;t++){const{mesh:e,offset:n}=d.get(m[t].meshName);c.setBindGroup(0,p[t]),c.draw(e.vertexCount,1,n,0)}c.end(),i.queue.submit([a.finish()]),requestAnimationFrame(n)}))}));class P{constructor(t,e,n,o,i=1,r=1,s=100){this.position=t,this.direction=e,this.up=n,this.aspect=o,this.fovy=i,this.znear=r,this.zfar=s}}class U extends P{constructor(){super(...arguments),this.transform=n(),this.mouseSpeed=.5,this.speed=10,this.horizontalAngle=3.14,this.verticalAngle=0,this.forward=!1,this.backward=!1,this.left=!1,this.right=!1,this.rightDirection=r(),this.initialFov=45,this.rotate=!1,this.lastX=0,this.lastY=0,this.onInit=()=>{document.addEventListener("mousedown",(t=>{this.rotate=!0,this.lastX=t.clientX,this.lastY=t.clientY})),document.addEventListener("mouseup",(()=>{this.rotate=!1})),document.addEventListener("mousemove",(t=>{if(this.rotate){var e,n,o,i,r,a,h,c,u,f=t.clientX,l=t.clientY;this.horizontalAngle+=this.mouseSpeed*b()*(this.lastX-t.clientX),this.verticalAngle+=this.mouseSpeed*b()*(this.lastY-t.clientY),console.log(t.clientX),this.direction=s(Math.cos(this.verticalAngle)*Math.sin(this.horizontalAngle),Math.sin(this.verticalAngle),Math.cos(this.verticalAngle)*Math.cos(this.horizontalAngle)),this.rightDirection=s(Math.sin(this.horizontalAngle-1.57),0,Math.cos(this.horizontalAngle-1.57)),e=this.up,n=this.rightDirection,o=this.direction,i=n[0],r=n[1],a=n[2],h=o[0],c=o[1],u=o[2],e[0]=r*u-a*c,e[1]=a*h-i*u,e[2]=i*c-r*h,this.lastX=f,this.lastY=l}})),document.addEventListener("wheel",(t=>{this.fovy=this.initialFov-5*t.deltaY})),document.addEventListener("keydown",(t=>{"w"==t.key&&(this.forward=!0),"s"==t.key&&(this.backward=!0),"a"==t.key&&(this.left=!0),"d"==t.key&&(this.right=!0)})),document.addEventListener("keyup",(t=>{"w"==t.key&&(this.forward=!1),"s"==t.key&&(this.backward=!1),"a"==t.key&&(this.left=!1),"d"==t.key&&(this.right=!1)}))},this.onUpdate=()=>{if(this.forward){let t=r();c(t,this.direction,b()*this.speed),a(this.position,this.position,t),console.log("Moving Forward!")}if(this.backward){let t=r();c(t,this.direction,b()*this.speed),h(this.position,this.position,t),console.log("Moving Backward!")}if(this.right){let t=r();c(t,this.rightDirection,b()*this.speed),a(this.position,this.position,t),console.log("Moving Right!")}if(this.left){let t=r();c(t,this.rightDirection,b()*this.speed),h(this.position,this.position,t),console.log("Moving Left!")}}}viewMatrix(){let e=n(),o=r();return a(o,this.position,this.direction),i=e,s=this.position,h=o,c=this.up,y=s[0],M=s[1],S=s[2],C=c[0],b=c[1],E=c[2],O=h[0],A=h[1],P=h[2],Math.abs(y-O)<t&&Math.abs(M-A)<t&&Math.abs(S-P)<t?function(t){t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1}(i):(p=y-O,v=M-A,w=S-P,u=b*(w*=x=1/Math.hypot(p,v,w))-E*(v*=x),f=E*(p*=x)-C*w,l=C*v-b*p,(x=Math.hypot(u,f,l))?(u*=x=1/x,f*=x,l*=x):(u=0,f=0,l=0),d=v*l-w*f,g=w*u-p*l,m=p*f-v*u,(x=Math.hypot(d,g,m))?(d*=x=1/x,g*=x,m*=x):(d=0,g=0,m=0),i[0]=u,i[1]=d,i[2]=p,i[3]=0,i[4]=f,i[5]=g,i[6]=v,i[7]=0,i[8]=l,i[9]=m,i[10]=w,i[11]=0,i[12]=-(u*y+f*M+l*S),i[13]=-(d*y+g*M+m*S),i[14]=-(p*y+v*M+w*S),i[15]=1),e;var i,s,h,c,u,f,l,d,g,m,p,v,w,x,y,M,S,C,b,E,O,A,P}projMatrix(){const t=n();return i(t,2*Math.PI/5,this.aspect,this.znear,this.zfar),t}}class z{constructor(t,e=window.innerWidth,n=window.innerHeight){this.resize=(t=window.innerWidth,e=window.innerHeight)=>{this.canvas.width=t,this.canvas.height=e},this.hasResized=(t,e)=>this.width!=t||this.height!=e,this.canvas=((t,e,n=document.body)=>{const o=document.createElement("canvas");return n.insertBefore(o,n.firstChild),o.id="web-gpu-context",o.width=t,o.height=e,o})(e,n,t)}get width(){return this.canvas.width}get height(){return this.canvas.height}get context(){return this.canvas.getContext("webgpu")}}const R={meshName:"cube",vertexArray:new Float32Array([1,-1,1,1,1,0,1,1,1,1,-1,-1,1,1,0,0,1,1,0,1,-1,-1,-1,1,0,0,0,1,0,0,1,-1,-1,1,1,0,0,1,1,0,1,-1,1,1,1,0,1,1,1,1,-1,-1,-1,1,0,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,-1,1,1,1,0,1,1,0,1,1,-1,-1,1,1,0,0,1,0,0,1,1,-1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,-1,-1,1,1,0,0,1,0,0,-1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,-1,1,1,1,0,1,0,0,-1,1,-1,1,0,1,0,1,1,0,-1,1,1,1,0,1,1,1,1,1,1,1,-1,1,1,1,0,1,0,0,-1,-1,1,1,0,0,1,1,1,1,-1,1,1,1,0,1,1,1,0,1,-1,1,-1,1,0,1,0,1,0,0,-1,-1,-1,1,0,0,0,1,1,0,-1,-1,1,1,0,0,1,1,1,1,-1,1,-1,1,0,1,0,1,0,0,1,1,1,1,1,1,1,1,1,1,-1,1,1,1,0,1,1,1,0,1,-1,-1,1,1,0,0,1,1,0,0,-1,-1,1,1,0,0,1,1,0,0,1,-1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,-1,-1,1,1,0,0,1,1,1,-1,-1,-1,1,0,0,0,1,0,1,-1,1,-1,1,0,1,0,1,0,0,1,1,-1,1,1,1,0,1,1,0,1,-1,-1,1,1,0,0,1,1,1,-1,1,-1,1,0,1,0,1,0,0]),vertexCount:36,vertexSize:40,colorOffset:16,uvOffset:32,positionOffset:0},_={meshName:"pyramid",vertexArray:new Float32Array([0,1,0,1,1,0,1,1,1,1,-1,-1,1,1,0,0,1,1,0,1,1,-1,1,1,0,0,0,1,0,0,0,1,0,1,1,1,1,1,1,1,1,-1,1,1,1,0,1,1,0,1,1,-1,-1,1,1,0,0,1,0,0,0,1,0,1,1,1,1,1,1,1,1,-1,-1,1,1,0,1,1,0,1,-1,-1,-1,1,1,0,0,1,0,0,0,1,0,1,0,0,1,1,1,1,-1,-1,-1,1,0,1,1,1,0,1,-1,-1,1,1,0,1,0,1,0,0,-1,-1,-1,1,1,1,1,1,1,1,1,-1,-1,1,0,1,1,1,0,1,1,-1,1,1,0,0,1,1,0,0,-1,-1,-1,1,0,0,1,1,0,0,1,-1,1,1,0,0,1,1,0,0,-1,-1,1,1,1,1,1,1,1,1]),vertexCount:18,vertexSize:40,colorOffset:16,uvOffset:32,positionOffset:0},B={meshName:"plane",vertexArray:new Float32Array([-1,0,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,0,-1,1,1,1,0,1,0,0,-1,0,-1,1,0,1,0,1,1,0,-1,0,1,1,0,1,1,1,1,1,1,0,-1,1,1,1,0,1,0,0]),vertexCount:6,vertexSize:40,colorOffset:16,uvOffset:32,positionOffset:0},k=document.getElementById("canvas-wrap"),F=document.getElementById("canvas-overlay"),N=e=>{const a=n();i(a,2*Math.PI/5,e,1,100);class h{constructor(t=r()){this.meshName=_.meshName,this.onInit=()=>{console.log("Translating cube")},this.onDestroy=()=>{},this.startPos=t,this.transform=n(),o(this.transform,this.transform,this.startPos),console.log(this.transform)}onUpdate(){this.transform=function(e=0,i=0,r=0){const h=n();o(h,h,s(e,i,r));const c=Date.now()/1e3;var u,f,l,d,g,m,p,v,w,x,y,M,S,C,b,E,O,A,P,U,z,R,_,B,k,F,N,T,D,G,I;return u=h,f=h,l=s(Math.sin(c),Math.cos(c),0),T=l[0],D=l[1],G=l[2],(I=Math.hypot(T,D,G))<t||(T*=I=1/I,D*=I,G*=I,d=Math.sin(1),m=1-(g=Math.cos(1)),p=f[0],v=f[1],w=f[2],x=f[3],y=f[4],M=f[5],S=f[6],C=f[7],b=f[8],E=f[9],O=f[10],A=f[11],P=T*T*m+g,U=D*T*m+G*d,z=G*T*m-D*d,R=T*D*m-G*d,_=D*D*m+g,B=G*D*m+T*d,k=T*G*m+D*d,F=D*G*m-T*d,N=G*G*m+g,u[0]=p*P+y*U+b*z,u[1]=v*P+M*U+E*z,u[2]=w*P+S*U+O*z,u[3]=x*P+C*U+A*z,u[4]=p*R+y*_+b*B,u[5]=v*R+M*_+E*B,u[6]=w*R+S*_+O*B,u[7]=x*R+C*_+A*B,u[8]=p*k+y*F+b*N,u[9]=v*k+M*F+E*N,u[10]=w*k+S*F+O*N,u[11]=x*k+C*F+A*N,f!==u&&(u[12]=f[12],u[13]=f[13],u[14]=f[14],u[15]=f[15])),function(t,e,n){var o=e[0],i=e[1],r=e[2],s=e[3],a=e[4],h=e[5],c=e[6],u=e[7],f=e[8],l=e[9],d=e[10],g=e[11],m=e[12],p=e[13],v=e[14],w=e[15],x=n[0],y=n[1],M=n[2],S=n[3];t[0]=x*o+y*a+M*f+S*m,t[1]=x*i+y*h+M*l+S*p,t[2]=x*r+y*c+M*d+S*v,t[3]=x*s+y*u+M*g+S*w,x=n[4],y=n[5],M=n[6],S=n[7],t[4]=x*o+y*a+M*f+S*m,t[5]=x*i+y*h+M*l+S*p,t[6]=x*r+y*c+M*d+S*v,t[7]=x*s+y*u+M*g+S*w,x=n[8],y=n[9],M=n[10],S=n[11],t[8]=x*o+y*a+M*f+S*m,t[9]=x*i+y*h+M*l+S*p,t[10]=x*r+y*c+M*d+S*v,t[11]=x*s+y*u+M*g+S*w,x=n[12],y=n[13],M=n[14],S=n[15],t[12]=x*o+y*a+M*f+S*m,t[13]=x*i+y*h+M*l+S*p,t[14]=x*r+y*c+M*d+S*v,t[15]=x*s+y*u+M*g+S*w}(n(),a,h),h}(this.startPos[0],this.startPos[1],this.startPos[2])}}let c=1;for(;c<=40;){let t=1;for(;t<=40;){let e=1;for(;e<=40;)x(new h(s(4*e,4*t,4*c))),e++;t++}c++}const l=u(O().toString(),F);var d;y(_),y(R),y(B),x(new class{constructor(t=r(),e=r()){var i,s,a,h,c,u;this.meshName=B.meshName,this.onInit=()=>{},this.onDestroy=()=>{},this.startPos=t,this.transform=n(),o(this.transform,this.transform,this.startPos),i=this.transform,s=this.transform,h=(a=e)[0],c=a[1],u=a[2],i[0]=s[0]*h,i[1]=s[1]*h,i[2]=s[2]*h,i[3]=s[3]*h,i[4]=s[4]*c,i[5]=s[5]*c,i[6]=s[6]*c,i[7]=s[7]*c,i[8]=s[8]*u,i[9]=s[9]*u,i[10]=s[10]*u,i[11]=s[11]*u,i[12]=s[12],i[13]=s[13],i[14]=s[14],i[15]=s[15],console.log(this.transform)}onUpdate(){l.textContent=O().toString()}}(s(0,0,0),s(10,1,10))),d=new U(s(0,0,5),r(),s(0,1,0),e,1,.1,1e3),v.length>=1?f.ERROR:(d.onInit(),v.push(d),f.SUCESS)},T=document.getElementById("checker-div");u("Welcome to BigWorld. Start your adventure now!",T),((t,e,n=document.body)=>{const o=((t,e,n=document.body)=>{const o=document.createElement("button");return o.onclick=e,o.textContent=t,n.appendChild(o),o})(t,e,n);o.classList.add("page-button")})("Play Now!",(()=>{if(!(()=>{const t=navigator.gpu,e=document.getElementById("gpu-check");return t?(e.textContent="WebGPU Enabled! Ready to start your adventure?",!0):(e.textContent="Current browser does not support WebGPU!",!1)})())return;console.log("Starting Bigworld..."),null==T||T.remove();let t=(()=>{let t=new z(k);return F.style.height=t.height.toString()+"px",F.style.width=t.width.toString()+"px",t})();window.addEventListener("resize",(e=>{console.log("Resize"),t.resize(),F.style.height=t.height.toString()+"px",F.style.width=t.width.toString()+"px"})),N(t.width/t.height),A({gameWindow:t,pageState:{active:!0}})}),T)})();
//# sourceMappingURL=main.bundle.js.map